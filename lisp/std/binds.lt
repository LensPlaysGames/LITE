;;; LITE LISP STANDARD KEYBINDINGS
;;; Depends on:
;;; -> basics.lt
;;; -> lists.lt

(defmacro keymap-push (given-alist key value)
  "Define GIVEN-ALIST to an alist with KEY associated to VALUE, no checking for duplicates."
  `(define ,given-alist (alist-set ,given-alist ,key ,value)))

(defmacro keymap-set (given-alist key value)
  "Define GIVEN-ALIST to an alist with KEY associated to VALUE, no duplicates."
  `(add-to-alist ,given-alist ,key ,value))

(defun make-simple-keymap ()
  "Create a small keymap with the usual rebinds that are used for modifier keys."
  (let ((simple-keymap nil))
    (keymap-push simple-keymap "LEFT-SUPER"    "SUPR")
    (keymap-push simple-keymap "RIGHT-SUPER"   "SUPR")
    (keymap-push simple-keymap "LEFT-CONTROL"  "CTRL")
    (keymap-push simple-keymap "RIGHT-CONTROL" "CTRL")
    (keymap-push simple-keymap "LEFT-ALT"      "ALTS")
    (keymap-push simple-keymap "RIGHT-ALT"     "ALTS")
    (keymap-push simple-keymap "LEFT-SHIFT"    "SHFT")
    (keymap-push simple-keymap "RIGHT-SHIFT"   "SHFT")
    simple-keymap))

(defmacro get-keymap-or-make-simple (keymap keystring)
  "Get keymap within KEYMAP at KEYSTRING, or make a simple keymap if it doesn't already exist."
  `(let ((keymap-at-keystring (alist-get ,keymap ,keystring)))
     (if keymap-at-keystring keymap-at-keystring (make-simple-keymap))))

(set keymap (make-simple-keymap) "The global keymap containing keybindings.")

;; TODO: Make actual ascii navigation functions so that they can
;; properly return current buffer, as they should.
(defun nav-ascii ()
  "Alter navigation functions to use byte based movement."
  (keymap-set keymap "<backspace>" '(backspace))
  (keymap-set keymap "<delete>"    '(remove-forward 1))
  (let ((ctrl-keymap (get-keymap-or-make-simple keymap "CTRL")))
    (keymap-set ctrl-keymap "f" '(forward-byte))
    (keymap-set ctrl-keymap "b" '(backward-byte))))

(defun nav-utf8 ()
  "Alter navigation functions to use utf8 based movement."
  (keymap-set keymap "<backspace>" '(utf8-backspace))
  (keymap-set keymap "<delete>"    '(utf8-remove-char-forward))
  (let ((ctrl-keymap (get-keymap-or-make-simple keymap "CTRL")))
    (keymap-set ctrl-keymap "f" '(utf8-forward-char))
    (keymap-set ctrl-keymap "b" '(utf8-backward-char))))

(defun nav-utf16 ()
  "Alter navigation functions to use utf16 based movement."
  (keymap-set keymap "<backspace>" '(utf16-backspace))
  (keymap-set keymap "<delete>"    '(utf16-remove-char-forward))
  (let ((ctrl-keymap (get-keymap-or-make-simple keymap "CTRL")))
    (keymap-set ctrl-keymap "f" '(utf16-forward-char))
    (keymap-set ctrl-keymap "b" '(utf16-backward-char))))

(defun nav-utf32 ()
  "Alter navigation functions to use utf32 based movement."
  (keymap-set keymap "<backspace>" '(utf32-backspace))
  (keymap-set keymap "<delete>"    '(utf32-remove-char-forward))
  (let ((ctrl-keymap (get-keymap-or-make-simple keymap "CTRL")))
    (keymap-set ctrl-keymap "f" '(utf32-forward-char))
    (keymap-set ctrl-keymap "b" '(utf32-backward-char))
    (keymap-set keymap "CTRL" ctrl-keymap)))

(defun default-unix-newline ()
  "Default to UNIX style newline (LF) when pressing return, and CRLF when pressing shift-return."
  (keymap-set keymap "<return>" "\\n")
  (let ((ctrl-keymap (get-keymap-or-make-simple keymap "CTRL")))
    (keymap-set ctrl-keymap "<return>" "\\r\\n")
    (keymap-set keymap "CTRL" ctrl-keymap)))

(defun default-dos-newline ()
  "Default to DOS style newline (CRLF) when pressing return, and LF when pressing shift-return."
  (keymap-set keymap "<return>" "\\r\\n")
  (let ((ctrl-keymap (get-keymap-or-make-simple keymap "CTRL")))
    (keymap-set ctrl-keymap "<return>" "\\n")
    (keymap-set keymap "CTRL" ctrl-keymap)))

;; keybinds: Newlines
(default-unix-newline)

;; keybinds: Navigation: Backspace, Delete, Forward, Backward
(nav-utf8)

;; keybinds: Tab is four spaces (by default)
(keymap-push keymap "<tab>" "    ")

;; keybinds: Escape
(keymap-push keymap "<escape>" 'ignore)

;; keybinds: Miscellaneous keys
(keymap-push keymap "<insert>"       'ignore)
(keymap-push keymap "<home>"         '(beginning-of-line))
(keymap-push keymap "<end>"          '(end-of-line))
(keymap-push keymap "<page-up>"      'ignore)
(keymap-push keymap "<page-down>"    'ignore)
(keymap-push keymap "<up-arrow>"     '(backward-line))
(keymap-push keymap "<down-arrow>"   '(forward-line))
(keymap-push keymap "<left-arrow>"   '(backward-byte))
(keymap-push keymap "<right-arrow>"  '(forward-byte))
(keymap-push keymap "<capslock>"     'ignore)
(keymap-push keymap "<print-screen>" 'ignore)
(keymap-push keymap "<pause>"        'ignore)
(keymap-push keymap "<scroll-lock>"  'ignore)

;; keybinds: Numpad (numeric keypad)
(keymap-push keymap "<numpad:lock>"      'ignore)
(keymap-push keymap "<numpad: >"         " ")
(keymap-push keymap "<numpad:backspace>" "<backspace>")
(keymap-push keymap "<numpad:tab>"       "<tab>")
(keymap-push keymap "<numpad:return>"    "<return>")
(keymap-push keymap "<numpad:.>"         ".")
(keymap-push keymap "<numpad:0>"         "0")
(keymap-push keymap "<numpad:00>"        "00")
(keymap-push keymap "<numpad:000>"       "000")
(keymap-push keymap "<numpad:1>"         "1")
(keymap-push keymap "<numpad:2>"         "2")
(keymap-push keymap "<numpad:3>"         "3")
(keymap-push keymap "<numpad:4>"         "4")
(keymap-push keymap "<numpad:5>"         "5")
(keymap-push keymap "<numpad:6>"         "6")
(keymap-push keymap "<numpad:7>"         "7")
(keymap-push keymap "<numpad:8>"         "8")
(keymap-push keymap "<numpad:9>"         "9")
(keymap-push keymap "<numpad:plus>"      "+")
(keymap-push keymap "<numpad:minus>"     "-")
(keymap-push keymap "<numpad:plusminus>" 'ignore)
(keymap-push keymap "<numpad:multiply>"  "*")
(keymap-push keymap "<numpad:divide>"    "/")
(keymap-push keymap "<numpad:equals>"    "=")
(keymap-push keymap "<numpad:xor>"       'ignore)
(keymap-push keymap "<numpad:power>"     "^")
(keymap-push keymap "<numpad:%>"         "%")
(keymap-push keymap "<numpad:&>"         "&")
(keymap-push keymap "<numpad:&&>"        "&&")
(keymap-push keymap "<numpad:|>"         "|")
(keymap-push keymap "<numpad:||>"        "||")
(keymap-push keymap "<numpad:(>"         "(")
(keymap-push keymap "<numpad:)>"         ")")
(keymap-push keymap "<numpad:{>"         "{")
(keymap-push keymap "<numpad:}>"         "}")
(keymap-push keymap "<numpad:!>"         "!")
(keymap-push keymap "<numpad::>"         ":")
(keymap-push keymap "<numpad:,>"         ",")
(keymap-push keymap "<numpad:@>"         "@")
(keymap-push keymap "<numpad:octal>"       'ignore)
(keymap-push keymap "<numpad:decimal>"     'ignore)
(keymap-push keymap "<numpad:hexadecimal>" 'ignore)
(keymap-push keymap "<numpad:A>"         "A")
(keymap-push keymap "<numpad:B>"         "B")
(keymap-push keymap "<numpad:C>"         "C")
(keymap-push keymap "<numpad:D>"         "D")
(keymap-push keymap "<numpad:E>"         "E")
(keymap-push keymap "<numpad:F>"         "F")

;; keybinds: Function Keys
(keymap-push keymap "<f1>"    'ignore)
(keymap-push keymap "<f2>"    'ignore)
(keymap-push keymap "<f3>"    'ignore)
(keymap-push keymap "<f4>"    'ignore)
(keymap-push keymap "<f5>"    'ignore)
(keymap-push keymap "<f6>"    'ignore)
(keymap-push keymap "<f7>"    'ignore)
(keymap-push keymap "<f8>"    'ignore)
(keymap-push keymap "<f9>"    'ignore)
(keymap-push keymap "<f10>"   'ignore)
(keymap-push keymap "<f11>"   'ignore)
(keymap-push keymap "<f12>"   'ignore)
(keymap-push keymap "<f13>"   'ignore)
(keymap-push keymap "<f14>"   'ignore)
(keymap-push keymap "<f15>"   'ignore)
(keymap-push keymap "<f16>"   'ignore)
(keymap-push keymap "<f17>"   'ignore)
(keymap-push keymap "<f18>"   'ignore)
(keymap-push keymap "<f19>"   'ignore)
(keymap-push keymap "<f20>"   'ignore)
(keymap-push keymap "<f21>"   'ignore)
(keymap-push keymap "<f22>"   'ignore)
(keymap-push keymap "<f23>"   'ignore)
(keymap-push keymap "<f24>"   'ignore)

;; TODO Bind default SHFT remappings (need double quote escape sequence, as well as better single backslash support.)
(let ((ctrl-keymap (get-keymap-or-make-simple keymap "CTRL")))
  (let ((ctrl-shft-keymap (get-keymap-or-make-simple ctrl-keymap "SHFT"))
        (ctrl-alts-keymap (get-keymap-or-make-simple ctrl-keymap "ALTS")))

    (keymap-push ctrl-keymap "g" '(keyboard-quit))

    ;; keybinds: Backspace, Delete
    (keymap-push ctrl-shft-keymap "d" "<backspace>")
    (keymap-push ctrl-keymap "d" "<delete>")

    ;; ctrl keybinds: Buffer navigation
    (keymap-push ctrl-keymap " " '(set-or-toggle-mark))

    (keymap-push ctrl-keymap "n" '(forward-line))
    (keymap-push ctrl-keymap "p" '(backward-line))
    (keymap-push ctrl-keymap "a" '(beginning-of-line))
    (keymap-push ctrl-keymap "e" '(end-of-line))

    (keymap-push ctrl-keymap "z" '(undo))
    (keymap-push ctrl-keymap "y" '(redo))
    (keymap-push ctrl-keymap "o" '(insert-lf))
    (keymap-push ctrl-shft-keymap "o" '(insert-crlf))
    (keymap-push ctrl-keymap "k" '(delete-line-past))

    ;; ctrl keybinds: save
    (keymap-push
     ctrl-keymap "s"
     '(save-current-buffer-with-msg "Saved"))

    ;; ctrl keybinds: Prompted
    (keymap-push ctrl-keymap "i" '(search-forward))
    (keymap-push ctrl-keymap "r" '(search-backward))

    ;; ctrl-alts keybinds: font size
    (keymap-push ctrl-alts-keymap "=" '(size-reset))

    ;; ctrl-alts keybinds: quit completely
    (keymap-push ctrl-alts-keymap "q" '(quit-completely 0))

    ;; Update nested keymap(s) in local keymap.
    ;; TODO: Is this necessary?
    (keymap-set ctrl-keymap "SHFT" ctrl-shft-keymap)
    (keymap-set ctrl-keymap "ALTS" ctrl-alts-keymap)
    ;; Update keymap in global environment from local keymap.
    (keymap-set keymap "CTRL" ctrl-keymap)))

(let ((alts-keymap (get-keymap-or-make-simple keymap "ALTS")))
  ;; keybinds: Evaluation
  (keymap-push alts-keymap "e" '(evaluate-line))
  (keymap-push alts-keymap "0" '(evaluate-first-line))
  (keymap-push alts-keymap "p" '(evaluate-prompted))

  ;; keybinds: Clipboard copy/paste
  (keymap-push alts-keymap "x" '(clipboard-cut current-buffer))
  (keymap-push alts-keymap "c" '(clipboard-copy current-buffer))
  (keymap-push alts-keymap "v" '(clipboard-paste current-buffer))

  ;; keybinds: Prompted
  (keymap-push alts-keymap "o" '(switch-current-buffer))

  ;; keybinds: Buffer navigation
  (keymap-push alts-keymap "f" '(forward-word))
  (keymap-push alts-keymap "b" '(backward-word))

  ;; keybinds: font size
  ;; Also see ctrl-alts keymap for size-reset
  (keymap-push alts-keymap "=" '(size-increase))
  (keymap-push alts-keymap "-" '(size-decrease))

  ;; keybinds: window change
  (keymap-push alts-keymap "1" '(layout-1))
  (keymap-push alts-keymap "2" '(layout-vsplit))
  (keymap-push alts-keymap "3" '(layout-hsplit))
  (keymap-push alts-keymap "4" '(layout-maxpane))
  (keymap-push alts-keymap "h" '(cycle-active-window -1))
  (keymap-push alts-keymap "l" '(cycle-active-window  1))
  (keymap-push alts-keymap "j" '(scroll-down))
  (keymap-push alts-keymap "k" '(scroll-up))
  (keymap-push alts-keymap "," '(scroll-left))
  (keymap-push alts-keymap "." '(scroll-right))

  ;; Update keymap in global environemt from local keymap.
  (keymap-set keymap "ALTS" alts-keymap))

(let ((shft-keymap (get-keymap-or-make-simple keymap "SHFT")))
  ;; keybind: Shift enter to insert DOS newline (CRLF).
  (keymap-push shft-keymap "<return>" "\\r\\n")

  (keymap-push shft-keymap "q" "Q")
  (keymap-push shft-keymap "w" "W")
  (keymap-push shft-keymap "e" "E")
  (keymap-push shft-keymap "r" "R")
  (keymap-push shft-keymap "t" "T")
  (keymap-push shft-keymap "y" "Y")
  (keymap-push shft-keymap "u" "U")
  (keymap-push shft-keymap "i" "I")
  (keymap-push shft-keymap "o" "O")
  (keymap-push shft-keymap "p" "P")
  (keymap-push shft-keymap "[" "{")
  (keymap-push shft-keymap "]" "}")
  (keymap-push shft-keymap "\\\_" "|")
  (keymap-push shft-keymap "a" "A")
  (keymap-push shft-keymap "s" "S")
  (keymap-push shft-keymap "d" "D")
  (keymap-push shft-keymap "f" "F")
  (keymap-push shft-keymap "g" "G")
  (keymap-push shft-keymap "h" "H")
  (keymap-push shft-keymap "j" "J")
  (keymap-push shft-keymap "k" "K")
  (keymap-push shft-keymap "l" "L")
  (keymap-push shft-keymap ";" ":")
  (keymap-push shft-keymap "'" "\\"") ;") << syntax highlight fix
  (keymap-push shft-keymap "z" "Z")
  (keymap-push shft-keymap "x" "X")
  (keymap-push shft-keymap "c" "C")
  (keymap-push shft-keymap "v" "V")
  (keymap-push shft-keymap "b" "B")
  (keymap-push shft-keymap "n" "N")
  (keymap-push shft-keymap "m" "M")
  (keymap-push shft-keymap "," "<")
  (keymap-push shft-keymap "." ">")
  (keymap-push shft-keymap "/" "?")
  (keymap-push shft-keymap "`" "~")
  (keymap-push shft-keymap "1" "!")
  (keymap-push shft-keymap "2" "@")
  (keymap-push shft-keymap "3" "#")
  (keymap-push shft-keymap "4" "$")
  (keymap-push shft-keymap "5" "%")
  (keymap-push shft-keymap "6" "^")
  (keymap-push shft-keymap "7" "&")
  (keymap-push shft-keymap "8" "*")
  (keymap-push shft-keymap "9" "(")
  (keymap-push shft-keymap "0" ")")
  (keymap-push shft-keymap "-" "_")
  (keymap-push shft-keymap "=" "+")

  ;; Update keymap in global environemt from local keymap.
  (keymap-set keymap "SHFT" shft-keymap))
